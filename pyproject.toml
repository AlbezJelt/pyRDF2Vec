[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.poetry]
name = "rdf2vec"
version = "0.0.5"
description = "Python implementation and extension of RDF2Vec"
license = "Ghent University and IMEC vzw"
authors = [
    "Gilles Vandewiele <gilles.vandewiele@ugent.be>",
    "Bram Steenwinckel <bram.steenwinckel@ugent.be>",
    "Michael Weyns <michael.weyns@ugent.be>"
]
maintainers = ["Gilles Vandewiele <gilles.vandewiele@ugent.be>"]
readme = "README.md"
repository = "https://github.com/IBCNServices/pyRDF2Vec"
documentation = "https://pyrdf2vec.readthedocs.io/en/latest/"
keywords = ["embeddings", "knowledge-graph", "rdf2vec", "word2vec"]
classifiers=[
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Topic :: Software Development :: Build Tools"
]

[tool.poetry.dependencies]
attrs = "^20.1.0"
gensim = "^3.8.3"
matplotlib = "^3.3.1"
networkx = "^2.5"
numpy = "^1.19.1"
pandas = "^1.1.1"
python = "^3.8"
python-louvain = "^0.14"
rdflib = "^5.0.0"
scikit-learn = "^0.23.2"
tqdm = "^4.48.2"

[tool.poetry.dev-dependencies]
bandit = "^1.6.2"
black = "^20.8b1"
codecov = "^2.1.9"
doc8 = "^0.8.1"
flake8 = "^3.8.3"
isort = "^5.4.2"
pytest = "^6.0.1"
pytest-cov = "^2.10.1"
sphinx = "^3.2.1"
sphinx-rtd-theme = "^0.5.0"
sphinxcontrib-napoleon = "^0.7"
tox = "^3.19.0"
yamllint = "^1.24.2"

[tool.poetry.extras]
docs = ["sphinx", "sphinx-rtd-theme", "sphinxcontrib-napoleon"]
styles = ["bandit", "black", "doc8", "flake8", "isort", "yamllint"]
tests = ["codecov", "pytest", "pytest-cov"]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/IBCNServices/pyRDF2Vec/issues"

[tool.black]
line-length = 79
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.tox
  | _build
  | build
  | dist
  | env
)/
'''


[tool.tox]
legacy_tox_ini = """
[tox]
envlist = coverage, docs, styles, py38
isolated_build = True

[testenv]
allowlist_externals = poetry

[testenv:coverage]
description = Runs unit tests and performs coverage.
commands =
    poetry install -vv -E tests
    poetry run pytest --cov=rdf2vec tests

[testenv:docs]
description = Builds documentation (HTML) with Sphinx.
commands =
    poetry install -vv -E docs
    poetry run sphinx-apidoc -f -o docs rdf2vec
    poetry run sphinx-build docs _build/html

[testenv:styles]
description = Checks the code style.
commands =
    poetry install -vv -E styles
    poetry run bandit -rv docs tests rdf2vec -l -ii
    poetry run black --check --diff docs tests rdf2vec
    poetry run doc8 --max-line-length 100 docs
    poetry run flake8 --statistics --count docs tests rdf2vec
    poetry run isort --check-only docs tests rdf2vec
    poetry run yamllint .
"""
